{"ast":null,"code":"var _jsxFileName = \"/Users/nathanromriell/Desktop/Portfolio/objtoweb/webglviewer/src/Controllers/WebGLController/WebGLMain.js\";\nimport React from 'react';\nimport GLCanvas from '../../Components/WebGL/GLCanvas';\nimport WebGLCamera from \"../../Data/WebGLCamera\";\nimport WebGLMaterial from \"../../Data/WebGLMaterial\";\nimport WebGLLight from \"../../Data/WebGLLight\";\nimport WebGLMesh from \"../../Data/WebGLMesh\";\nimport VertexShader from \"../../Data/VertexShader\";\nimport FragmentShader from \"../../Data/FragmentShader\";\nimport Suzanne from \"../../Data/monkey\";\n\nclass WebGLMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.glContext = null;\n    this.camera = null;\n    this.light = null;\n    this.frame = 0;\n    this.selectedPosition = [0, 0.5, 0];\n    this.rotatingCamera = false;\n    this.clearColor = [props.red, props.green, props.blue, props.alpha];\n    this.lastMousePosition = null;\n    this.lastUpdateTime = new Date().getTime();\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onButtonDown.bind(this));\n    document.addEventListener(\"keyup\", this.onButtonUp.bind(this));\n    document.addEventListener(\"mousedown\", this.onMouseDown.bind(this));\n    document.addEventListener(\"mouseup\", this.onMouseUp.bind(this));\n    document.addEventListener(\"mousemove\", this.onMouseMove.bind(this));\n    this.getGLContext();\n    const selectedMaterial = new WebGLMaterial(this.glContext, [1.0, 0, 0, 0.5], 0.00, VertexShader, FragmentShader);\n    this.selectedObject = new WebGLMesh(selectedMaterial, Suzanne, this.camera, this.light, this.selectedPosition, [0, 0, 0], [1, 1, 1]);\n    this.update();\n  }\n\n  resize() {\n    // Lookup the size the browser is displaying the canvas.\n    var realToCSSPixels = window.devicePixelRatio;\n    var displayWidth = Math.floor(this.glContext.canvas.clientWidth * realToCSSPixels);\n    var displayHeight = Math.floor(this.glContext.canvas.clientHeight * realToCSSPixels); // Check if the canvas is not the same size.\n\n    if (this.glContext.canvas.width !== displayWidth || this.glContext.canvas.height !== displayHeight) {\n      // Make the canvas the same size\n      this.glContext.canvas.width = displayWidth;\n      this.glContext.canvas.height = displayHeight;\n    }\n\n    this.glContext.viewport(0, 0, this.glContext.canvas.width, this.glContext.canvas.height);\n  }\n\n  update() {\n    let currentTime = new Date().getTime();\n\n    if (currentTime - this.lastUpdateTime >= 16) {\n      //Lock to 60 FPS\n      this.lastUpdateTime = new Date().getTime();\n      this.resize();\n      this.frame += 1;\n      this.clearWithColor(this.clearColor[0], this.clearColor[1], this.clearColor[2], this.clearColor[3]);\n      this.selectedObject.draw(this.frame);\n    }\n  }\n\n  getGLContext() {\n    if (this.glContext == null) {\n      const canvas = document.querySelector(\"#glCanvas\");\n      this.glContext = canvas.getContext(\"webgl\");\n\n      if (this.glContext == null) {\n        alert(\"WebGL Not Supported By This Browser\");\n      }\n\n      this.camera = new WebGLCamera(this.glContext, [0, 0, -20], [3.14 / 4, 0, 0]);\n      this.light = new WebGLLight([0, 10, 20], [1, 1, 1, 1]);\n    }\n\n    return this.glContext;\n  }\n\n  clearWithColor(red, green, blue, alpha) {\n    if (this.glContext == null) {\n      alert(\"No GL Context! Check WebGL Support\");\n      return;\n    }\n\n    this.glContext.clearColor(red, green, blue, alpha);\n    this.glContext.clearDepth(10.0);\n    this.glContext.enable(this.glContext.DEPTH_TEST);\n    this.glContext.depthFunc(this.glContext.LEQUAL);\n    this.glContext.clear(this.glContext.COLOR_BUFFER_BIT | this.glContext.DEPTH_BUFFER_BIT);\n  }\n\n  onMouseMove(e) {\n    //console.log(\"Mouse Move\");\n    if (this.rotatingCamera) {\n      let diff = e.clientX - this.lastMousePosition;\n      this.camera.rotateAroundOrigin(diff * 0.01);\n      this.update();\n    }\n\n    this.lastMousePosition = e.clientX;\n  }\n\n  onMouseDown(e) {\n    // console.log(\"Mouse Down\");\n    this.lastMousePosition = e.clientX;\n    this.rotatingCamera = true;\n  }\n\n  onMouseUp(e) {\n    // console.log(\"Mouse Up\");\n    this.rotatingCamera = false;\n  }\n\n  onButtonDown(e) {\n    //console.log(\"Pressed:\" + e.keyCode);\n    this.update();\n  }\n\n  onButtonUp(e) {//console.log(\"Pressed:\"+e.keyCode);\n  }\n\n  render() {\n    return React.createElement(GLCanvas, {\n      onKeyDown: e => this.onButtonDown(e),\n      onKeyUp: e => this.onButtonUp(e),\n      onMouseDown: this.onMouseDown,\n      onMouseUp: this.onMouseUp,\n      onMouseMove: this.onMouseMove,\n      tabIndex: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default WebGLMain;","map":{"version":3,"sources":["/Users/nathanromriell/Desktop/Portfolio/objtoweb/webglviewer/src/Controllers/WebGLController/WebGLMain.js"],"names":["React","GLCanvas","WebGLCamera","WebGLMaterial","WebGLLight","WebGLMesh","VertexShader","FragmentShader","Suzanne","WebGLMain","Component","constructor","props","glContext","camera","light","frame","selectedPosition","rotatingCamera","clearColor","red","green","blue","alpha","lastMousePosition","lastUpdateTime","Date","getTime","componentDidMount","document","addEventListener","onButtonDown","bind","onButtonUp","onMouseDown","onMouseUp","onMouseMove","getGLContext","selectedMaterial","selectedObject","update","resize","realToCSSPixels","window","devicePixelRatio","displayWidth","Math","floor","canvas","clientWidth","displayHeight","clientHeight","width","height","viewport","currentTime","clearWithColor","draw","querySelector","getContext","alert","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","e","diff","clientX","rotateAroundOrigin","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport GLCanvas from '../../Components/WebGL/GLCanvas'\nimport WebGLCamera from \"../../Data/WebGLCamera\";\nimport WebGLMaterial from \"../../Data/WebGLMaterial\";\nimport WebGLLight from \"../../Data/WebGLLight\";\nimport WebGLMesh from \"../../Data/WebGLMesh\";\nimport VertexShader from \"../../Data/VertexShader\";\nimport FragmentShader from \"../../Data/FragmentShader\";\nimport Suzanne from \"../../Data/monkey\";\n\nclass WebGLMain extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.glContext = null;\n        this.camera = null;\n        this.light = null;\n        this.frame = 0;\n        this.selectedPosition = [0,0.5,0];\n        this.rotatingCamera = false;\n        this.clearColor = [props.red, props.green, props.blue, props.alpha];\n        this.lastMousePosition = null;\n        this.lastUpdateTime = new Date().getTime();\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.onButtonDown.bind(this));\n        document.addEventListener(\"keyup\", this.onButtonUp.bind(this));\n        document.addEventListener(\"mousedown\", this.onMouseDown.bind(this));\n        document.addEventListener(\"mouseup\", this.onMouseUp.bind(this));\n        document.addEventListener(\"mousemove\", this.onMouseMove.bind(this));\n        this.getGLContext();\n\n        const selectedMaterial = new WebGLMaterial(this.glContext, [1.0, 0, 0, 0.5], 0.00, VertexShader, FragmentShader);\n        this.selectedObject = new WebGLMesh(selectedMaterial, Suzanne, this.camera, this.light, this.selectedPosition, [0,0,0], [1,1,1]);\n        this.update();\n    }\n\n    resize(){\n        // Lookup the size the browser is displaying the canvas.\n        var realToCSSPixels = window.devicePixelRatio;\n        var displayWidth  = Math.floor(this.glContext.canvas.clientWidth  * realToCSSPixels);\n        var displayHeight = Math.floor(this.glContext.canvas.clientHeight * realToCSSPixels);\n\n        // Check if the canvas is not the same size.\n        if (this.glContext.canvas.width  !== displayWidth ||\n            this.glContext.canvas.height !== displayHeight) {\n\n            // Make the canvas the same size\n            this.glContext.canvas.width  = displayWidth;\n            this.glContext.canvas.height = displayHeight;\n        }\n        this.glContext.viewport(0, 0, this.glContext.canvas.width, this.glContext.canvas.height);\n    }\n\n    update() {\n        let currentTime = new Date().getTime();\n        if(currentTime-this.lastUpdateTime >= 16) { //Lock to 60 FPS\n            this.lastUpdateTime = new Date().getTime();\n            this.resize();\n            this.frame += 1;\n            this.clearWithColor(this.clearColor[0], this.clearColor[1], this.clearColor[2], this.clearColor[3]);\n            this.selectedObject.draw(this.frame);\n        }\n    }\n\n    getGLContext(){\n        if(this.glContext == null) {\n            const canvas = document.querySelector(\"#glCanvas\");\n            this.glContext = canvas.getContext(\"webgl\");\n            if(this.glContext == null){\n                alert(\"WebGL Not Supported By This Browser\");\n            }\n            this.camera = new WebGLCamera(this.glContext, [0,0,-20], [3.14/4,0,0]);\n            this.light = new WebGLLight([0, 10 , 20], [1,1,1,1]);\n        }\n        return this.glContext;\n    }\n\n    clearWithColor(red, green, blue, alpha){\n        if(this.glContext == null) {\n            alert(\"No GL Context! Check WebGL Support\");\n            return;\n        }\n        this.glContext.clearColor(red, green, blue, alpha);\n        this.glContext.clearDepth(10.0);\n        this.glContext.enable(this.glContext.DEPTH_TEST);\n        this.glContext.depthFunc(this.glContext.LEQUAL);\n        this.glContext.clear(this.glContext.COLOR_BUFFER_BIT | this.glContext.DEPTH_BUFFER_BIT);\n    }\n\n    onMouseMove(e) {\n        //console.log(\"Mouse Move\");\n        if(this.rotatingCamera){\n            let diff = e.clientX-this.lastMousePosition;\n            this.camera.rotateAroundOrigin(diff*0.01);\n            this.update();\n        }\n        this.lastMousePosition = e.clientX;\n    }\n\n    onMouseDown(e){\n       // console.log(\"Mouse Down\");\n        this.lastMousePosition = e.clientX;\n        this.rotatingCamera = true;\n    }\n\n    onMouseUp(e){\n       // console.log(\"Mouse Up\");\n        this.rotatingCamera = false;\n    }\n\n    onButtonDown(e) {\n        //console.log(\"Pressed:\" + e.keyCode);\n        this.update();\n    }\n\n\n    onButtonUp(e){\n        //console.log(\"Pressed:\"+e.keyCode);\n    }\n\n    render() {\n        return (\n            <GLCanvas onKeyDown={(e) => this.onButtonDown(e)} onKeyUp={(e) => this.onButtonUp(e)} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onMouseMove={this.onMouseMove} tabIndex=\"0\"/>\n        )\n    }\n\n}\n\nexport default WebGLMain"]},"metadata":{},"sourceType":"module"}