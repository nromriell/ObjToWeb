{"ast":null,"code":"import * as glMatrix from \"./gl-matrix\";\n\nclass WebGLCamera {\n  constructor(glContext, position, rotation) {\n    this.fieldOfView = 45;\n    this.zNear = 0.01;\n    this.zFar = 100.0;\n    this.glContext = glContext;\n    this.position = position;\n    this.rotation = rotation;\n    this.regenerateProjection();\n  }\n\n  regenerateProjection() {\n    const fov = this.fieldOfView * Math.PI / 180;\n    const aspect = this.glContext.canvas.clientWidth / this.glContext.canvas.clientHeight;\n    this.projectionMatrix = glMatrix.mat4.create();\n    glMatrix.mat4.perspective(this.projectionMatrix, fov, aspect, this.zNear, this.zFar);\n    glMatrix.mat4.translate(this.projectionMatrix, this.projectionMatrix, this.position);\n    glMatrix.mat4.rotate(this.projectionMatrix, this.projectionMatrix, this.rotation[0], [1, 0, 0]);\n    glMatrix.mat4.rotate(this.projectionMatrix, this.projectionMatrix, this.rotation[1], [0, 1, 0]);\n    glMatrix.mat4.rotate(this.projectionMatrix, this.projectionMatrix, this.rotation[2], [0, 0, 1]);\n  }\n\n}\n\nexport default WebGLCamera;","map":{"version":3,"sources":["/Users/nathanromriell/Desktop/Portfolio/objtoweb/webglviewer/src/Data/WebGLCamera.js"],"names":["glMatrix","WebGLCamera","constructor","glContext","position","rotation","fieldOfView","zNear","zFar","regenerateProjection","fov","Math","PI","aspect","canvas","clientWidth","clientHeight","projectionMatrix","mat4","create","perspective","translate","rotate"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,aAA1B;;AAEA,MAAMC,WAAN,CACA;AASIC,EAAAA,WAAW,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,QAAtB,EACX;AAAA,SATAC,WASA,GATc,EASd;AAAA,SARAC,KAQA,GARQ,IAQR;AAAA,SAPAC,IAOA,GAPO,KAOP;AACI,SAAKL,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKI,oBAAL;AACH;;AAEDA,EAAAA,oBAAoB,GAAG;AACnB,UAAMC,GAAG,GAAG,KAAKJ,WAAL,GAAiBK,IAAI,CAACC,EAAtB,GAAyB,GAArC;AACA,UAAMC,MAAM,GAAG,KAAKV,SAAL,CAAeW,MAAf,CAAsBC,WAAtB,GAAkC,KAAKZ,SAAL,CAAeW,MAAf,CAAsBE,YAAvE;AACA,SAAKC,gBAAL,GAAwBjB,QAAQ,CAACkB,IAAT,CAAcC,MAAd,EAAxB;AACAnB,IAAAA,QAAQ,CAACkB,IAAT,CAAcE,WAAd,CAA0B,KAAKH,gBAA/B,EACIP,GADJ,EAEIG,MAFJ,EAGI,KAAKN,KAHT,EAII,KAAKC,IAJT;AAKAR,IAAAA,QAAQ,CAACkB,IAAT,CAAcG,SAAd,CAAwB,KAAKJ,gBAA7B,EAA+C,KAAKA,gBAApD,EAAsE,KAAKb,QAA3E;AACAJ,IAAAA,QAAQ,CAACkB,IAAT,CAAcI,MAAd,CAAqB,KAAKL,gBAA1B,EACI,KAAKA,gBADT,EAEI,KAAKZ,QAAL,CAAc,CAAd,CAFJ,EAGI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHJ;AAIAL,IAAAA,QAAQ,CAACkB,IAAT,CAAcI,MAAd,CAAqB,KAAKL,gBAA1B,EACI,KAAKA,gBADT,EAEI,KAAKZ,QAAL,CAAc,CAAd,CAFJ,EAGI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHJ;AAIAL,IAAAA,QAAQ,CAACkB,IAAT,CAAcI,MAAd,CAAqB,KAAKL,gBAA1B,EACI,KAAKA,gBADT,EAEI,KAAKZ,QAAL,CAAc,CAAd,CAFJ,EAGI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHJ;AAIH;;AAvCL;;AA0CA,eAAeJ,WAAf","sourcesContent":["import * as glMatrix from \"./gl-matrix\"\n\nclass WebGLCamera\n{\n    fieldOfView = 45;\n    zNear = 0.01;\n    zFar = 100.0;\n    glContext;\n    position;\n    rotation;\n    projectionMatrix;\n\n    constructor(glContext, position, rotation)\n    {\n        this.glContext = glContext;\n        this.position = position;\n        this.rotation = rotation;\n        this.regenerateProjection();\n    }\n\n    regenerateProjection() {\n        const fov = this.fieldOfView*Math.PI/180;\n        const aspect = this.glContext.canvas.clientWidth/this.glContext.canvas.clientHeight;\n        this.projectionMatrix = glMatrix.mat4.create();\n        glMatrix.mat4.perspective(this.projectionMatrix,\n            fov,\n            aspect,\n            this.zNear,\n            this.zFar);\n        glMatrix.mat4.translate(this.projectionMatrix, this.projectionMatrix, this.position);\n        glMatrix.mat4.rotate(this.projectionMatrix,\n            this.projectionMatrix,\n            this.rotation[0],\n            [1,0,0]);\n        glMatrix.mat4.rotate(this.projectionMatrix,\n            this.projectionMatrix,\n            this.rotation[1],\n            [0,1,0]);\n        glMatrix.mat4.rotate(this.projectionMatrix,\n            this.projectionMatrix,\n            this.rotation[2],\n            [0,0,1]);\n    }\n}\n\nexport default WebGLCamera"]},"metadata":{},"sourceType":"module"}