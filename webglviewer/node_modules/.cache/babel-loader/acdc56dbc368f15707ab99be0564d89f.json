{"ast":null,"code":"import * as glMatrix from \"./gl-matrix\";\n\nclass WebGLMesh {\n  constructor(material, mesh, camera, light, position, rotation, scale) {\n    this.material = material;\n    this.mesh = mesh;\n    this.position = position;\n    this.rotation = rotation;\n    this.scale = scale;\n    this.modelViewMatrix = glMatrix.mat4.create();\n    this.normalMatrix = glMatrix.mat4.create();\n    this.camera = camera;\n    this.light = light;\n  }\n\n  setCamera(camera) {\n    this.camera = camera;\n  }\n\n  bindBuffers() {\n    this.material.glContext.enableVertexAttribArray(this.material.programInfo.attribLocations.vertexPosition);\n    const positionBuffer = this.material.glContext.createBuffer();\n    this.material.glContext.bindBuffer(this.material.glContext.ARRAY_BUFFER, positionBuffer);\n    this.material.glContext.bufferData(this.material.glContext.ARRAY_BUFFER, new Float32Array(this.mesh.vertices), this.material.glContext.STATIC_DRAW);\n    this.material.glContext.vertexAttribPointer(this.material.programInfo.attribLocations.vertexPosition, 3, this.material.glContext.FLOAT, false, 0, 0);\n    this.material.glContext.enableVertexAttribArray(this.material.programInfo.attribLocations.normal);\n    const normalBuffer = this.material.glContext.createBuffer();\n    this.material.glContext.bindBuffer(this.material.glContext.ARRAY_BUFFER, normalBuffer);\n    this.material.glContext.bufferData(this.material.glContext.ARRAY_BUFFER, new Float32Array(this.mesh.normals), this.material.glContext.STATIC_DRAW);\n    this.material.glContext.vertexAttribPointer(this.material.programInfo.attribLocations.normal, 3, this.material.glContext.FLOAT, false, 0, 0);\n    const indexBuffer = this.material.glContext.createBuffer();\n    this.material.glContext.bindBuffer(this.material.glContext.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    this.material.glContext.bufferData(this.material.glContext.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.mesh.tris), this.material.glContext.STATIC_DRAW);\n  }\n\n  draw(frame) {\n    this.bindBuffers();\n    const glContext = this.material.glContext;\n    glMatrix.mat4.identity(this.modelViewMatrix);\n    glMatrix.mat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.rotation[0], [1, 0, 0]);\n    glMatrix.mat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.rotation[1], [0, 1, 0]);\n    glMatrix.mat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.rotation[2], [0, 0, 1]); //  glContext.bindBuffer(glContext.ARRAY_BUFFER, this.buffers.position);\n\n    glMatrix.mat4.translate(this.modelViewMatrix, this.modelViewMatrix, this.position);\n    glMatrix.mat4.scale(this.modelViewMatrix, this.modelViewMatrix, this.scale);\n    glMatrix.mat4.invert(this.normalMatrix, this.modelViewMatrix);\n    glMatrix.mat4.transpose(this.normalMatrix, this.normalMatrix);\n    glContext.useProgram(this.material.programInfo.program);\n    glContext.uniformMatrix4fv(this.material.programInfo.uniformLocations.projectionMatrix, false, this.camera.projectionMatrix);\n    glContext.uniformMatrix4fv(this.material.programInfo.uniformLocations.modelViewMatrix, false, this.modelViewMatrix);\n    glContext.uniformMatrix4fv(this.material.programInfo.uniformLocations.normalMatrix, false, this.normalMatrix);\n    glContext.uniform3fv(this.material.programInfo.uniformLocations.lightPosition, this.light.position);\n    glContext.uniform4fv(this.material.programInfo.uniformLocations.color, this.material.color);\n    glContext.uniform1f(this.material.programInfo.uniformLocations.ambientLight, this.material.ambient);\n    glContext.drawElements(glContext.TRIANGLE_FAN, this.mesh.tris.length, glContext.UNSIGNED_SHORT, 0);\n  }\n\n}\n\nexport default WebGLMesh;","map":{"version":3,"sources":["/Users/nathanromriell/Desktop/Portfolio/objtoweb/webglviewer/src/Data/WebGLMesh.js"],"names":["glMatrix","WebGLMesh","constructor","material","mesh","camera","light","position","rotation","scale","modelViewMatrix","mat4","create","normalMatrix","setCamera","bindBuffers","glContext","enableVertexAttribArray","programInfo","attribLocations","vertexPosition","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","vertices","STATIC_DRAW","vertexAttribPointer","FLOAT","normal","normalBuffer","normals","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","tris","draw","frame","identity","rotate","translate","invert","transpose","useProgram","program","uniformMatrix4fv","uniformLocations","projectionMatrix","uniform3fv","lightPosition","uniform4fv","color","uniform1f","ambientLight","ambient","drawElements","TRIANGLE_FAN","length","UNSIGNED_SHORT"],"mappings":"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","sourcesContent":["import * as glMatrix from \"./gl-matrix\"\n\nclass WebGLMesh {\n    constructor(material, mesh, camera, light, position, rotation, scale){\n        this.material = material;\n        this.mesh = mesh;\n        this.position = position;\n        this.rotation = rotation;\n        this.scale = scale;\n        this.modelViewMatrix = glMatrix.mat4.create();\n        this.normalMatrix = glMatrix.mat4.create();\n        this.camera = camera;\n        this.light = light;\n    }\n\n    setCamera(camera){\n        this.camera = camera;\n    }\n\n    bindBuffers(){\n        this.material.glContext.enableVertexAttribArray(\n            this.material.programInfo.attribLocations.vertexPosition\n        );\n        const positionBuffer = this.material.glContext.createBuffer();\n        this.material.glContext.bindBuffer(this.material.glContext.ARRAY_BUFFER, positionBuffer);\n        this.material.glContext.bufferData(this.material.glContext.ARRAY_BUFFER, new Float32Array(this.mesh.vertices), this.material.glContext.STATIC_DRAW);\n        this.material.glContext.vertexAttribPointer(this.material.programInfo.attribLocations.vertexPosition,\n            3,\n            this.material.glContext.FLOAT,\n            false,\n            0,\n            0);\n        this.material.glContext.enableVertexAttribArray(\n            this.material.programInfo.attribLocations.normal\n        );\n        const normalBuffer = this.material.glContext.createBuffer();\n        this.material.glContext.bindBuffer(this.material.glContext.ARRAY_BUFFER, normalBuffer);\n        this.material.glContext.bufferData(this.material.glContext.ARRAY_BUFFER, new Float32Array(this.mesh.normals), this.material.glContext.STATIC_DRAW);\n        this.material.glContext.vertexAttribPointer(this.material.programInfo.attribLocations.normal,\n            3,\n            this.material.glContext.FLOAT,\n            false,\n            0,\n            0);\n        const indexBuffer = this.material.glContext.createBuffer();\n        this.material.glContext.bindBuffer(this.material.glContext.ELEMENT_ARRAY_BUFFER, indexBuffer);\n        this.material.glContext.bufferData(this.material.glContext.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.mesh.tris), this.material.glContext.STATIC_DRAW);\n    }\n\n    draw(frame){\n        this.bindBuffers();\n        const glContext = this.material.glContext;\n        glMatrix.mat4.identity(this.modelViewMatrix);\n        glMatrix.mat4.rotate(this.modelViewMatrix,\n            this.modelViewMatrix,\n            this.rotation[0],\n            [1,0,0]);\n        glMatrix.mat4.rotate(this.modelViewMatrix,\n            this.modelViewMatrix,\n            this.rotation[1],\n            [0,1,0]);\n        glMatrix.mat4.rotate(this.modelViewMatrix,\n            this.modelViewMatrix,\n            this.rotation[2],\n            [0,0,1]);\n      //  glContext.bindBuffer(glContext.ARRAY_BUFFER, this.buffers.position);\n        glMatrix.mat4.translate(this.modelViewMatrix, this.modelViewMatrix, this.position);\n        glMatrix.mat4.scale(this.modelViewMatrix, this.modelViewMatrix, this.scale);\n        glMatrix.mat4.invert(this.normalMatrix, this.modelViewMatrix);\n        glMatrix.mat4.transpose(this.normalMatrix, this.normalMatrix);\n        glContext.useProgram(this.material.programInfo.program);\n        glContext.uniformMatrix4fv(\n            this.material.programInfo.uniformLocations.projectionMatrix,\n            false,\n            this.camera.projectionMatrix\n        );\n        glContext.uniformMatrix4fv(\n            this.material.programInfo.uniformLocations.modelViewMatrix,\n            false,\n            this.modelViewMatrix\n        );\n        glContext.uniformMatrix4fv(\n            this.material.programInfo.uniformLocations.normalMatrix,\n            false,\n            this.normalMatrix\n        );\n        glContext.uniform3fv(this.material.programInfo.uniformLocations.lightPosition, this.light.position);\n        glContext.uniform4fv(this.material.programInfo.uniformLocations.color, this.material.color);\n        glContext.uniform1f(this.material.programInfo.uniformLocations.ambientLight, this.material.ambient);\n        glContext.drawElements(glContext.TRIANGLE_FAN, this.mesh.tris.length, glContext.UNSIGNED_SHORT, 0);\n    }\n}\n\nexport default WebGLMesh"]},"metadata":{},"sourceType":"module"}